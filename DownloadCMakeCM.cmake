set(CMAKECM_ROLLING FALSE CACHE BOOL "Use Rolling for CMakeCM")

set(CMAKECM_BASE_URL "https://raw.githubusercontent.com/flagarde/CMakeCM/master/" CACHE INTERNAL "CMakeCM base URL")
set(CMAKECM_INSTALL_DIR "${CMAKE_BINARY_DIR}/cmake/CMakeCM" CACHE INTERNAL "CMakeCM installation directory")

## Some part of Colors.cmake here to Colorize the outpu before it has been downloaded
if(NOT WIN32)
  string(ASCII 27 Esc)
  set(Reset "${Esc}[m")
  set(BoldRed     "${Esc}[1;31m")
  set(BoldMagenta "${Esc}[1;35m")
  set(BoldYellow  "${Esc}[1;33m")
  set(BoldGreen   "${Esc}[1;32m")
endif()

if(NOT DEFINED CMAKECM_INSTALLED_VERSION)
  set(CMAKECM_INSTALLED_VERSION "-1")
endif()

message(STATUS "${BoldMagenta}[CMakeCM] Downloading CMakeCMVersion.cmake${Reset}")

file(DOWNLOAD "${CMAKECM_BASE_URL}/CMakeCMVersion.cmake" "${CMAKECM_INSTALL_DIR}/CMakeCMVersionTemp.cmake" INACTIVITY_TIMEOUT 5 LOG CMAKECM_LOG STATUS CMAKECM_STATUS TIMEOUT 1)
list(GET CMAKECM_STATUS 0 CMAKECM_STATUS_CODE)
list(GET CMAKECM_STATUS 1 CMAKECM_STATUS_MESSAGE)
if(${CMAKECM_STATUS_CODE})
  if(NOT EXISTS "${CMAKECM_INSTALL_DIR}/CMakeCMVersion.cmake")
    message(STATUS "${BoldRed}Error downloading CMakeCMVersion : ${CMAKECM_STATUS_MESSAGE}${Reset}")
    file(REMOVE "${CMAKECM_INSTALL_DIR}/CMakeCMVersionTemp.cmake")
    message(FATAL_ERROR)
  else()
    message(STATUS "${BoldYellow}Error downloading CMakeCMVersion : ${CMAKECM_STATUS_MESSAGE}${Reset}")
    message(STATUS "${BoldYellow}Using the one already downloaded${Reset}")
    file(REMOVE "${CMAKECM_INSTALL_DIR}/CMakeCMVersionTemp.cmake")
  endif()
else()
 file(RENAME "${CMAKECM_INSTALL_DIR}/CMakeCMVersionTemp.cmake" "${CMAKECM_INSTALL_DIR}/CMakeCMVersion.cmake")
endif()

include("${CMAKECM_INSTALL_DIR}/CMakeCMVersion.cmake")

function(download_cmakecm)
   message(STATUS "${BoldMagenta}[CMakeCM] Downloading CMakeCM.cmake${Reset}")
   file(DOWNLOAD "${CMAKECM_BASE_URL}/CMakeCM.cmake" "${CMAKECM_INSTALL_DIR}/CMakeCMTemp.cmake" INACTIVITY_TIMEOUT 5 LOG CMAKECM_LOG STATUS CMAKECM_STATUS TIMEOUT 1 EXPECTED_HASH SHA256=${CMAKECM_LATEST_SHA256})
list(GET CMAKECM_STATUS 0 CMAKECM_STATUS_CODE)
list(GET CMAKECM_STATUS 1 CMAKECM_STATUS_MESSAGE)
if(${CMAKECM_STATUS_CODE})
  if(NOT EXISTS "${CMAKECM_INSTALL_DIR}/CMakeCMTemp.cmake")
    message(STATUS "${BoldRed}Error downloading CMakeCMVersion : ${CMAKECM_STATUS_MESSAGE}${Reset}")
    file(REMOVE "${CMAKECM_INSTALL_DIR}/CMakeCMTemp.cmake")
    message(FATAL_ERROR)
  else()
    message(STATUS "${BoldYellow}Error downloading CMakeCMVersion : ${CMAKECM_STATUS_MESSAGE}${Reset}")
    message(STATUS "${BoldYellow}Using the one already downloaded${Reset}")
    file(REMOVE "${CMAKECM_INSTALL_DIR}/CMakeCMTemp.cmake")
    set(CMAKECM_INSTALLED_VERSION "${CMAKECM_LATEST_VERSION}" CACHE INTERNAL "Installed version of CMakeCM" FORCE)
  endif()
else()
 file(RENAME "${CMAKECM_INSTALL_DIR}/CMakeCMTemp.cmake" "${CMAKECM_INSTALL_DIR}/CMakeCM.cmake")
endif()
endfunction()

if(${CMAKECM_INSTALLED_VERSION} EQUAL "-1" OR NOT EXISTS "${CMAKECM_INSTALL_DIR}/CMakeCM.cmake")
   download_cmakecm()
   set(CMAKECM_INSTALLED_VERSION "${CMAKECM_LATEST_VERSION}" CACHE INTERNAL "Installed version of CMakeCM" FORCE)
elseif((${CMAKECM_INSTALLED_VERSION} LESS ${CMAKECM_LATEST_VERSION}) AND ${CMAKECM_ROLLING})
    message(STATUS "${BoldGreen}New version of CMakeCM available :${Reset}")
    math(EXPR CMAKECM_VERSION_START ${CMAKECM_INSTALLED_VERSION}+1)
    foreach(CMAKECM_VERSION_NUMBER RANGE ${CMAKECM_VERSION_START} ${CMAKECM_LATEST_VERSION})
      message(STATUS "${BoldGreen}* VERSION ${CMAKECM_VERSION_NUMBER} : ${CMAKECM_VERSION_${CMAKECM_VERSION_NUMBER}_DESCRIPTION}${Reset}")
    endforeach()
    download_cmakecm()
    set(CMAKECM_INSTALLED_VERSION "${CMAKECM_LATEST_VERSION}" CACHE INTERNAL "Installed version of CMakeCM" FORCE)
elseif((${CMAKECM_INSTALLED_VERSION} LESS ${CMAKECM_LATEST_VERSION}) AND NOT ${CMAKECM_ROLLING})
  message(STATUS "${BoldYellow}[CMakeCM] New version of CMakeCM available but will not be installed${Reset}")
  message(STATUS "${BoldYellow}[CMakeCM] To install the new version you can :${Reset}")
  message(STATUS "${BoldYellow}[CMakeCM] * Erase ${CMAKECM_INSTALL_DIR}/CMakeCM.cmake${Reset}")
  message(STATUS "${BoldYellow}[CMakeCM] * Use CMAKECM_ROLLING option to always download the new version available${Reset}")
endif()

include("${CMAKECM_INSTALL_DIR}/CMakeCM.cmake")
